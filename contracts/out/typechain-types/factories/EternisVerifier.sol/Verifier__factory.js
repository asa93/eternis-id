"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Verifier__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "userCount",
                type: "uint256",
            },
        ],
        name: "IdentityCreated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "eternisId",
        outputs: [
            {
                internalType: "uint256",
                name: "identifier",
                type: "uint256",
            },
            {
                internalType: "bytes8",
                name: "jurisdiction",
                type: "bytes8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "getIdentity",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "identifierToId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "reclaimAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalUsers",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "userCount",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "provider",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "parameters",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "context",
                                type: "string",
                            },
                        ],
                        internalType: "struct Reclaim.ClaimInfo",
                        name: "claimInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "identifier",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address",
                                        name: "owner",
                                        type: "address",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "timestampS",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "epoch",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct Reclaim.CompleteClaimData",
                                name: "claim",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes[]",
                                name: "signatures",
                                type: "bytes[]",
                            },
                        ],
                        internalType: "struct Reclaim.SignedClaim",
                        name: "signedClaim",
                        type: "tuple",
                    },
                ],
                internalType: "struct Reclaim.Proof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "verifyProof",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b5073d6534f52ceb3d0139b915bc0c3278a94687fa5c76000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600360008154809291906001019190505550610f39806100866000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063aeade0e61161005b578063aeade0e614610101578063bb17e6531461011f578063bff1f9e11461014f578063d45053381461016d5761007d565b806307973ccf1461008257806385e3f058146100a0578063a960e69e146100d1575b600080fd5b61008a61019e565b6040516100979190610518565b60405180910390f35b6100ba60048036038101906100b59190610573565b6101a4565b6040516100c8929190610630565b60405180910390f35b6100eb60048036038101906100e69190610c1a565b6101f4565b6040516100f89190610518565b60405180910390f35b61010961036a565b6040516101169190610c72565b60405180910390f35b61013960048036038101906101349190610573565b61038e565b6040516101469190610518565b60405180910390f35b6101576103a6565b6040516101649190610518565b60405180910390f35b61018760048036038101906101829190610573565b6103bc565b604051610195929190610cc8565b60405180910390f35b60035481565b6000606060026000848152602001908152602001600020600001546101eb6002600086815260200190815260200160002060010160009054906101000a900460c01b6103ed565b91509150915091565b6000808260200151600001516000015160001c9050600060016000838152602001908152602001600020541461025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025690610d3d565b60405180910390fd5b6003546001600083815260200190815260200160002081905550604051806040016040528082815260200161029b856000015160400151610416565b77ffffffffffffffffffffffffffffffffffffffffffffffff19168152506002600060035481526020019081526020016000206000820151816000015560208201518160010160006101000a81548167ffffffffffffffff021916908360c01c02179055509050506003600081548092919060010191905055507fcc19a259b8f0a9e8535262466fee1cd8056b076fa6a259eca9075a84aa64af1c6003546040516103469190610518565b60405180910390a16001600082815260200190815260200160002054915050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600060016003546103b79190610d8c565b905090565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900460c01b905082565b6060816040516020016104009190610de1565b6040516020818303038152906040529050919050565b600080600867ffffffffffffffff81111561043457610433610665565b5b6040519080825280601f01601f1916602001820160405280156104665781602001600182028036833780820191505090505b50905060005b60088110156104ec57838160276104839190610dfc565b8151811061049457610493610e30565b5b602001015160f81c60f81b8282815181106104b2576104b1610e30565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080600101905061046c565b50806104f790610e9c565b915050919050565b6000819050919050565b610512816104ff565b82525050565b600060208201905061052d6000830184610509565b92915050565b6000604051905090565b600080fd5b600080fd5b610550816104ff565b811461055b57600080fd5b50565b60008135905061056d81610547565b92915050565b6000602082840312156105895761058861053d565b5b60006105978482850161055e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105da5780820151818401526020810190506105bf565b60008484015250505050565b6000601f19601f8301169050919050565b6000610602826105a0565b61060c81856105ab565b935061061c8185602086016105bc565b610625816105e6565b840191505092915050565b60006040820190506106456000830185610509565b818103602083015261065781846105f7565b90509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61069d826105e6565b810181811067ffffffffffffffff821117156106bc576106bb610665565b5b80604052505050565b60006106cf610533565b90506106db8282610694565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff82111561070a57610709610665565b5b610713826105e6565b9050602081019050919050565b82818337600083830152505050565b600061074261073d846106ef565b6106c5565b90508281526020810184848401111561075e5761075d6106ea565b5b610769848285610720565b509392505050565b600082601f830112610786576107856106e5565b5b813561079684826020860161072f565b91505092915050565b6000606082840312156107b5576107b4610660565b5b6107bf60606106c5565b9050600082013567ffffffffffffffff8111156107df576107de6106e0565b5b6107eb84828501610771565b600083015250602082013567ffffffffffffffff81111561080f5761080e6106e0565b5b61081b84828501610771565b602083015250604082013567ffffffffffffffff81111561083f5761083e6106e0565b5b61084b84828501610771565b60408301525092915050565b6000819050919050565b61086a81610857565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108b88261088d565b9050919050565b6108c8816108ad565b81146108d357600080fd5b50565b6000813590506108e5816108bf565b92915050565b600063ffffffff82169050919050565b610904816108eb565b811461090f57600080fd5b50565b600081359050610921816108fb565b92915050565b60006080828403121561093d5761093c610660565b5b61094760806106c5565b9050600061095784828501610878565b600083015250602061096b848285016108d6565b602083015250604061097f84828501610912565b604083015250606061099384828501610912565b60608301525092915050565b600067ffffffffffffffff8211156109ba576109b9610665565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff8211156109eb576109ea610665565b5b6109f4826105e6565b9050602081019050919050565b6000610a14610a0f846109d0565b6106c5565b905082815260208101848484011115610a3057610a2f6106ea565b5b610a3b848285610720565b509392505050565b600082601f830112610a5857610a576106e5565b5b8135610a68848260208601610a01565b91505092915050565b6000610a84610a7f8461099f565b6106c5565b90508083825260208201905060208402830185811115610aa757610aa66109cb565b5b835b81811015610aee57803567ffffffffffffffff811115610acc57610acb6106e5565b5b808601610ad98982610a43565b85526020850194505050602081019050610aa9565b5050509392505050565b600082601f830112610b0d57610b0c6106e5565b5b8135610b1d848260208601610a71565b91505092915050565b600060a08284031215610b3c57610b3b610660565b5b610b4660406106c5565b90506000610b5684828501610927565b600083015250608082013567ffffffffffffffff811115610b7a57610b796106e0565b5b610b8684828501610af8565b60208301525092915050565b600060408284031215610ba857610ba7610660565b5b610bb260406106c5565b9050600082013567ffffffffffffffff811115610bd257610bd16106e0565b5b610bde8482850161079f565b600083015250602082013567ffffffffffffffff811115610c0257610c016106e0565b5b610c0e84828501610b26565b60208301525092915050565b600060208284031215610c3057610c2f61053d565b5b600082013567ffffffffffffffff811115610c4e57610c4d610542565b5b610c5a84828501610b92565b91505092915050565b610c6c816108ad565b82525050565b6000602082019050610c876000830184610c63565b92915050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b610cc281610c8d565b82525050565b6000604082019050610cdd6000830185610509565b610cea6020830184610cb9565b9392505050565b7f74686973206964656e7469747920616c72656164792065786973747300000000600082015250565b6000610d27601c836105ab565b9150610d3282610cf1565b602082019050919050565b60006020820190508181036000830152610d5681610d1a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d97826104ff565b9150610da2836104ff565b9250828203905081811115610dba57610db9610d5d565b5b92915050565b6000819050919050565b610ddb610dd682610c8d565b610dc0565b82525050565b6000610ded8284610dca565b60088201915081905092915050565b6000610e07826104ff565b9150610e12836104ff565b9250828201905080821115610e2a57610e29610d5d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b6000819050602082019050919050565b6000610e868251610c8d565b80915050919050565b600082821b905092915050565b6000610ea782610e5f565b82610eb184610e6a565b9050610ebc81610e7a565b92506008821015610efc57610ef77fffffffffffffffff00000000000000000000000000000000000000000000000083600803600802610e8f565b831692505b505091905056fea2646970667358221220d48be8c8f1fbd146e3a3a43580682ccdda512338d521933c526f6e7ce2bef53764736f6c63430008140033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var Verifier__factory = /** @class */ (function (_super) {
    __extends(Verifier__factory, _super);
    function Verifier__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    Verifier__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Verifier__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Verifier__factory.prototype.connect = function (runner) {
        return _super.prototype.connect.call(this, runner);
    };
    Verifier__factory.createInterface = function () {
        return new ethers_1.Interface(_abi);
    };
    Verifier__factory.connect = function (address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    };
    Verifier__factory.bytecode = _bytecode;
    Verifier__factory.abi = _abi;
    return Verifier__factory;
}(ethers_1.ContractFactory));
exports.Verifier__factory = Verifier__factory;
